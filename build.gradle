buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:1.0.0'
  }
}

subprojects {
  repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public/" }
  }
}

configure(subprojects.findAll { it.path.startsWith(':custom-versions:') || 
                                it.path.startsWith(':cyclestreets') }) {
  if (!file("${projectDir}/build.gradle").exists())
    return
  apply plugin: 'com.android.application'

  android {
    Properties appConfig = loadProperties("${rootDir}/config.properties")

    compileSdkVersion appConfig['sdkVersion'].toInteger()
    buildToolsVersion appConfig['toolsVersion']

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
      minSdkVersion appConfig['minSdkVersion'].toInteger()
      targetSdkVersion appConfig['targetSdkVersion'].toInteger()
      versionCode appConfig['versionCode'].toInteger()
      versionName appConfig['versionName']
    } // defaultConfig

    def licenseDetails = file("${projectDir}/license.properties");
    if (licenseDetails.exists()) {
      signingConfigs {
        release {
          Properties props = loadProperties(licenseDetails)

          storeFile file(props['key.store'])
          storePassword props['key.password']
          keyAlias props['key.alias']
          keyPassword props['key.password']
        }
      } // signingConfigs

      buildTypes {
        release {
          signingConfig signingConfigs.release
        }
      } // buildTypes
    } else {
      println "${projectDir} : No license.properties"
    } // licenseDetails.exists

    def cyclestreetsDetails = file("${projectDir}/cyclestreets.properties");
    if (cyclestreetsDetails.exists()) {
      buildTypes {
        debug {
          manifestPlaceholders = loadProperties("${projectDir}/cyclestreets.properties")
        }  
        release {
          manifestPlaceholders = loadProperties("${projectDir}/cyclestreets.properties")
        }
      } // buildTypes

    } else {
      println "${projectDir} : No cyclestreets.properties"   
    }

    packagingOptions {
      exclude 'META-INF/LICENSE'
      exclude 'META-INF/LICENSE.txt'
      exclude 'META-INF/DEPENDENCIES'
      exclude 'META-INF/NOTICE'
      exclude 'META-INF/NOTICE.txt'
    } // packagingOptions
  }
}

configure(subprojects.findAll { it.path.startsWith(':libraries:') }) {
  apply plugin: 'com.android.library'

  android {
    Properties appConfig = loadProperties("${rootDir}/config.properties")

    compileSdkVersion appConfig['sdkVersion'].toInteger()
    buildToolsVersion appConfig['toolsVersion']

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
      minSdkVersion appConfig['minSdkVersion'].toInteger()
      targetSdkVersion appConfig['targetSdkVersion'].toInteger()
      versionCode appConfig['versionCode'].toInteger()
      versionName appConfig['versionName']
    }
  }
}

def loadProperties(fileName) {
  Properties props = new Properties()
  props.load(new FileInputStream(file(fileName)))
  return props;
}
